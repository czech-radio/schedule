{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Recipe: Get Shows with specified attribute \n",
    "\n",
    "## Problem\n",
    "\n",
    "Get Shows with specified time or title.\n",
    "\n",
    "## Solution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The autoreload extension is already loaded. To reload it, use:\n",
      "  %reload_ext autoreload\n"
     ]
    }
   ],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "import datetime as dt\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "from cro.schedule import Client, Schedule"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "client = Client()  # Set the station id (sid) later."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "client.station = \"plus\"\n",
    "schedule = client.get_day_schedule()  # today"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Get shows in specified time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "08:30:00\n",
      "Zprávy 08:00:00 08:09:00\n",
      "Téma dne 08:10:00 08:30:00\n",
      "Radiokniha 23:33:00 00:00:00\n"
     ]
    }
   ],
   "source": [
    "shows = schedule.shows_by_time(\"08:00:00\", \"08:30:00\")\n",
    "\n",
    "for show in shows:\n",
    "    print(show.title, show.since.time().isoformat(), show.till.time().isoformat())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Get shows with specified title"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Zprávy 00:00:00 00:10:00\n",
      "Zprávy 01:00:00 01:05:00\n",
      "Zprávy 02:00:00 02:05:00\n",
      "Zprávy 03:00:00 03:05:00\n",
      "Zprávy 04:00:00 04:05:00\n",
      "Zprávy 05:00:00 05:05:00\n",
      "Zprávy 06:00:00 06:09:00\n",
      "Zprávy 07:00:00 07:09:00\n",
      "Zprávy 08:00:00 08:09:00\n",
      "Zprávy 09:00:00 09:09:00\n",
      "Zprávy 10:00:00 10:09:00\n",
      "Zprávy 10:00:00 10:00:00\n",
      "Zprávy 11:00:00 11:09:00\n",
      "Zprávy 13:00:00 13:09:00\n",
      "Zprávy 14:00:00 14:09:00\n",
      "Zprávy 15:00:00 15:09:00\n",
      "Zprávy 16:00:00 16:09:00\n",
      "Zprávy 17:00:00 17:06:00\n",
      "Zprávy 19:00:00 19:05:00\n",
      "Zprávy 20:00:00 20:05:00\n",
      "Zprávy 21:00:00 21:10:00\n",
      "Zprávy 22:00:00 22:05:00\n",
      "Zprávy 23:00:00 23:04:00\n"
     ]
    }
   ],
   "source": [
    "shows = schedule.shows_by_title(\"Zprávy\")\n",
    "\n",
    "for show in shows:\n",
    "    print(show.title, show.since.time().isoformat(), show.till.time().isoformat())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "8e4236b61e4a3b08ae53654359cc9eb3acbffc1cd2cfa626a3e05fdc8be0cc9c"
  },
  "kernelspec": {
   "display_name": "Python 3.10.0 64-bit ('.venv': venv)",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
